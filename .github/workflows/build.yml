name: Build and Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install Go dependencies
      run: |
        cd sensor-api
        go mod download
        
    - name: Build sensor-api (Go)
      run: |
        cd sensor-api
        go build -o sensor-api-bin main.go
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Set up Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies for dashboard
      run: |
        cd sensor-dashboard
        bun install
        
    - name: Build dashboard
      run: |
        cd sensor-dashboard
        bun run build
        
    - name: Create configuration template
      run: |
        # Create a sample environment file that users can customize
        cat > env-template.txt << EOL
        # Database Configuration
        MYSQL_USER=your_db_user
        MYSQL_PASS=your_db_password
        MYSQL_HOST=localhost
        MYSQL_PORT=3306
        MYSQL_DB=your_database_name
        EOL
        
    - name: Package applications
      run: |
        mkdir -p release
        # Copy API binary
        cp sensor-api/sensor-api-bin release/
        cp env-template.txt release/
        
        # Create a README for the release
        cat > release/README.md << EOL
        # IAQ Dashboard Release
        
        This package contains:
        
        1. **sensor-api-bin** - The Go API server binary
        2. **dashboard/** - The compiled dashboard web application
        3. **env-template.txt** - Template for environment variables
        
        ## Setup Instructions
        
        1. Copy the env-template.txt to .env and fill in your database credentials
        2. Start the API server with: \`./sensor-api-bin\`
        3. Host the dashboard folder with your preferred web server
        EOL
        
        # Copy dashboard build (SvelteKit output goes to build directory)
        cp -r sensor-dashboard/build release/dashboard
        
        # Zip everything
        cd release
        zip -r ../iaq-dashboard-release.zip .
        cd ..
        
    - name: Upload release package
      uses: actions/upload-artifact@v4
      with:
        name: iaq-dashboard-release
        path: iaq-dashboard-release.zip
        
    - name: Create Release
      id: create_release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        files: iaq-dashboard-release.zip
        name: IAQ Dashboard Release ${{ github.run_number }}
        tag_name: v0.1.${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 